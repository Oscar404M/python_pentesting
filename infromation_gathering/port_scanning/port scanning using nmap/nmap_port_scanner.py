import nmap, sys # استدعاء المكتبات المطلوبه

try:
    target = sys.argv[1] # استخراج الهدف من موجه الاوامر

except IndexError:
    print("ex: pythonnmap_port_scanner.py localhost")
    print("start default scanning on localhost")
    target = 'localhost'

nm = nmap.PortScanner() # استدعاء دالة فحص المنافذ

print("[*] Start Scanning...") # طباعة رساله بدء الفحص    

nm.scan(target, arguments="-O --dns-servers 8.8.8.8,8.8.4.4 -sV") # بدء الفحص 
scan_stats = nm.scanstats() # احصائيات الفحص

print(f"[ {scan_stats['timestr']}] Elapsed: {scan_stats['elapsed']}s " \
f"Up hosts:{scan_stats['uphosts']} Down hosts: {scan_stats['downhosts']}" \
f" Total hosts:{scan_stats['totalhosts']} ]") # استخراج معلومات الفحص وطباعتها

equivalent_commandline = nm.command_line() # معرفة نوع الخيارات المستخدمة في الفحص

print(f"[*] Equivalent command: { equivalent_commandline }") # طباعة الخيارات المستخدمه في الفحص

hosts = nm.all_hosts()
for host in hosts:
    hostname = nm[host].hostname() # الحصول علي اسم المضيف
    ipv4 = nm[host].get("addresses").get("ipv4") # الحصول علي الاصدار الرابع من الايبي
    mac_address = nm[host].get('addresses').get("mac") # الحصول علي عنوان الماك
    vendor = nm[host].get("vendor") # الحصول علي اسم المنتج
    os_match = nm[host].get("osmatch")[0] # الحصول علي نظام التشغيل
    open_tcp_ports = nm[host].all_tcp() # الحصول علي منافذ المفتوحه ل tcp
    open_udp_ports = nm[host].all_udp() # الحصول علي منافذ udp
    
    print( "=" * 30 , host , "=" * 30 ) # طباعة خط فاصل
    # طباعة المعلومات     
    print(f"Hostname: {hostname} IPv4: { ipv4 } MAC: {mac_address}")
    print(f"Vendor: {vendor}")
    print(f"os name: {os_match.get('name')}")

    if open_tcp_ports or open_udp_ports :
        print ("-" * 30 , "Ports Open", "-" * 30)
    for tcp_port in open_tcp_ports :
        # الحصول علي معلومات كل بورت مفتوح        
        port_details = nm[host].tcp(tcp_port)
        port_state = port_details.get("state") # حاله البورت اذا كان مفتوحا او تم فلترته
        port_up_reason = port_details.get( "reason" ) # سبب الحاله
        port_service_name = port_details.get( "name" ) # البروتوكول المستخدم علي المنفذ
        port_product_name = port_details.get( "product" ) # نوع المنتج
        port_product_version = port_details.get( "version" ) # اصدار المنتج
        port_extrainfo = port_details.get( "extrainfo" ) # معلومات اضافيه
        port_cpe = port_details.get( "cpe" ) # معرفة نظام التشغيل ان امكن
            # طباعة المعلومات المستخرجه        
        print(f"TCP Port: { tcp_port } {port_service_name} Status: { port_state } Reason: { port_up_reason }")
        print(f"product: {port_product_name} version: {port_product_version}")
        print(f"Extra info: { port_extrainfo } CPE: { port_cpe }")
        print("-" * 50 )
    if open_udp_ports :
        print( open_udp_ports )